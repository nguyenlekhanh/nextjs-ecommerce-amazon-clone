// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
  session Session[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model VerificationToken {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  identifier      String
  token           String   @unique
  expires         DateTime
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Products {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  isNew          Boolean
  oldPrice       String
  price          String
  description    String
  category       String
  image          String
  brand          String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model StripeSessions {
  id                          String    @id @default(auto()) @map("_id") @db.ObjectId
  email                       String
  stripe_session_id           String
  createdAt                   DateTime  @default(now())
}

model Orders {
  id                          String    @id @default(auto()) @map("_id") @db.ObjectId
  stripe_session_id           String
  amount_discount             String?
  amount_subtotal             String?
  amount_tax                  String?
  amount_total                String?
  currency                    String?
  user_email                  String
  orderLineItems              OrderLineItems[] @relation("orderLineItems")
  createdAt                   DateTime  @default(now())
}

model OrderLineItems {
  id                          String    @id @default(auto()) @map("_id") @db.ObjectId
  title                       String?
  quantity                    Int?
  unit_amount                 String?
  amount_discount             String?
  amount_subtotal             String?
  amount_tax                  String?
  amount_total                String?
  currency                    String?
  image                       String?
  description                 String?
  order_id                    String  @db.ObjectId
  order Orders @relation("orderLineItems", fields: [order_id], references: [id], onDelete: Cascade)
  createdAt                   DateTime  @default(now())
}

